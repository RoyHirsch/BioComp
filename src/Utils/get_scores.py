import re
import numpy as np
import os

root = os.path.realpath(__file__ + "/../")

res = {}
for root, dirs, files in os.walk(root):
	for fileName in files:
		match = re.search(r'train[\d.]*o', fileName)
		if match:
			file = open(os.path.join(root, fileName),'r')
			logText = file.read()
			file.close()
			if re.search(r'AUPR = ([\d.]*)', logText) != None:
				score = float(re.findall('AUPR = ([\d.]*)', logText)[0])
				sample = int(re.findall(r'train([\d].*)o', fileName)[0][:-1])
				if str(sample) not in res.keys():
					res[str(sample)] = score

# Added zero to fix indices
yaronScore = [0,0.16023739505308218,0.0745585860440992,0.3061254639617411,0.002143631131554816,0.11453083159078789,0.017512657566176017,0.214671762550952,0.03633570605345608,0.23945814607752897,0.20500428221858116,0.06710247655797678,0.09319484852123394,0.0982696796636768,0.1740815659080042,0.03753136220783013,0.07516460146271298,0.01580261360846538,0.0353637262008397,0.018903347487858966,0.19064837537733323,0.08053668351788809,0.026711388352604906,0.05089474991977682,0.002081527181333297,0.017065381097219452,0.00626626299033236,0.051642180189139276,0.0058836683341474535,0.012905142634571643,0.17398649626954754,0.037662087636794954,0.03917734718069218,0.054976420014304445,0.10262984962540263,0.12090373288773232,0.06904435321925764,0.09667458748375897,0.2915708128362953,0.04952093276738524,0.09378811922828387,0.2501096375001046,0.28634514412277234,0.04143200179105847,0.017409794741488974,0.003531805495183172,0.1975557134859925,0.05838638724353066,0.013535984643730395,0.06419554536464411,0.11321559050430359,0.03219664349917627,0.13930769779167787,0.16381975364537163,0.24664153439713862,0.03841882690675444,0.04031454090267377,0.5946106975336878,0.024747700746561244,0.5147738247500491,0.054418726549547346,0.07776496069437427,0.17259568628315358,0.016627211761876867,0.04331255109062134,0.03337032265975676,0.03573846357104673,0.2768159984716628,0.08795390900862844,0.04362794937625136,0.13381244973761086,0.066257052241356,0.013025242249288981,0.22144896065852418,0.10334465066106752,0.06672988345024992,0.18869300098598188,0.3022281276431035,0.09035450182042065,0.058923421518150665,0.34195811305533064,0.036312780378334075,0.06928095783176082,0.1002092609830263,0.013368262236914374,0.006664799511160373,0.47178689992462486,0.015557775116931466,0.12860353720362727,0.15623835100552633,0.036916026447039674,0.21034182003385687,0.0024875708977993892,0.1903572884114506,0.0919829979729197,0.05649219647951225,0.1678629105902888,0.07755322390705457,0.004051065307769298,0.002065405476669425,0.003248597738021507,0.002049701032371658,0.15570993377710476,0.13939403003434472,0.089363250999766,0.20841430203703812,0.043151270670233166,0.08317399914556782,0.2371032576553759,0.13115053596104118,0.09716562082449924,0.046416965557310695,0.002610220361870733,0.12034638523213341,0.09133578979886567,0.03079896646951945,0.0025360497280983185,0.010474274564206437,0.01599889361776823,0.2929916127302766,0.06203767956183803,0.03005966376668455,0.01634460797850576,0.04165621259175147]
yaronAvrg = float(np.mean(yaronScore))
l = [float(y) for x,y in res.items()]
myAvrg = float(np.mean(l))
good = 0
bad = 0
print('Yaron mean AUPR {} my mean AUPR {}'.format(yaronAvrg, myAvrg))
for i in range(130):
	if str(i) in res.keys():
		print('Sample number {} : my AUPR : {} yaron AUPR {}'.format(str(i), round(res[str(i)],4), round(yaronScore[i],4)))
		if (res[str(i)] - yaronScore[i]) >= 0:
			good += 1
		else:
			bad += 1
print('Number of good examples {}\nNumber of bad examples {}'.format(good, bad))